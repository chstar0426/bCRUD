@page "/DeleteEmployee/{CurrentID}"
@using DataModels
@inject NavigationManager NavigationManager
@inject EmployeeService  EmployeeService


<h2>Delete Employee</h2>
<hr />

<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            <label>Employee ID : </label>
            <label>@objEmp.EmployeeID </label>
        </div>
        <div class="form-group">
            <label>Name : </label>
            <label>@objEmp.Name </label>
        </div>
        <div class="form-group">
            <label>Gender : </label>
            <label>@objEmp.Genter </label>
        </div>
        <div class="form-group">
            <label>Country : </label>
            <label>@objEmp.Country </label>
        </div>
        <div class="form-group">
            <label>City: </label>
            <label>@objEmp.City </label>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@DeleteEmployeeInfo" value="Delete" />
            <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>


@code {

    [Parameter]
    public string CurrentID { get; set; }
    EmployeeInfo objEmp = new EmployeeInfo();


    protected override async Task OnInitializedAsync()
    {
        objEmp = await Task.Run(() => EmployeeService.GetEmployeeById(Convert.ToInt32(CurrentID)));
    }

    protected void DeleteEmployeeInfo()
    {
        EmployeeService.DeleteEmpInfo(objEmp);
        NavigationManager.NavigateTo("Employee");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Employee");
    }

}